#ifndef __SPI_DRIVER_H
#define __SPI_DRIVER_H

#ifdef __cplusplus
 extern "C" {
#endif /* __cplusplus */

#include "stm32f767xx.h"

#include "util.h"

#define SPI_DEVMODE_MASTER
#define SPI_DEVMODE_SLAVE

#define SPI_BUSCONFIG_FULLDUPLEX
#define SPI_BUSCONFIG_HALFDUPLEX
#define SPI_BUSCONFIG_SIMPLEXTXONLY
#define SPI_BUSCONFIG_SIMPLEXRXONLY

#define SPI_CLKSPEED_DIV2
#define SPI_CLKSPEED_DIV4
#define SPI_CLKSPEED_DIV8
#define SPI_CLKSPEED_DIV16
#define SPI_CLKSPEED_DIV32
#define SPI_CLKSPEED_DIV64
#define SPI_CLKSPEED_DIV128
#define SPI_CLKSPEED_DIV256

#define SPI_DATAFORMAT_8BIT
#define SPI_DATAFORMAT_16BIT

typedef struct{
	uint8_t SPI_devMode;	/* NOTE: Master or Slave mode selection */
	uint8_t SPI_busConfig;	/* NOTE: Full Duplex, Half Duplex, Simplex TX_ONLY, Simplex RX_ONLY */
	uint8_t SPI_clkSpeed;	/* NOTE: Baudrate Control Value selection */
	uint8_t SPI_dataFormat;	/* NOTE: 8 or 16-bit selection */
	uint8_t SPI_cpol;		/* NOTE: Bunları sadece mode değişkeni ile ayarla, iki tane ayrı değişken olmasın. */
	uint8_t SPI_cpha;
	uint8_t SPI_ssm;
}SPI_config_s;

typedef struct{
	SPI_TypeDef *pBaseAddress;
	SPI_config_s config;
}SPI_handle_s;

extern void SPI_clkCntrl(SPI_TypeDef *pBaseAddress, UTIL_enableDisable_e enableDisable);

extern void SPI_init(SPI_handle_s *SPI_handle);
extern void SPI_deInit(SPI_TypeDef *pBaseAddress);

#endif
